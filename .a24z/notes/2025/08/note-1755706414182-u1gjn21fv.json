{
  "note": "## File-Based Note Storage Migration\n\nSuccessfully migrated the a24z-Memory note storage system from a single JSON file to individual files stored in date-based directories.\n\n### Implementation Details\n\n**Storage Structure:**\n```\n.a24z/\n├── notes/\n│   ├── 2024/\n│   │   ├── 01/\n│   │   │   └── note-1234567890-abc.json\n│   └── 2025/\n│       └── 08/\n│           └── note-1755663676569-2pqrw5xq9.json\n└── note-guidance.md\n```\n\n### Key Benefits for Git Syncing\n\n1. **Superior Conflict Resolution**: Each note change creates an isolated diff, allowing multiple developers to add notes simultaneously without conflicts\n2. **Better Performance**: No need to parse/rewrite entire JSON for single note changes, faster incremental syncs\n3. **Native Git Tool Support**: Direct `grep` on note content, `git log --follow` for note history, meaningful `git diff` output\n4. **Atomic Operations**: Each note write is atomic (write to temp file, then rename)\n\n### Migration Process\n\nThe system automatically migrates legacy `repository-notes.json` files when first accessed:\n- Reads all notes from the legacy file\n- Creates date-based directory structure (YYYY/MM)\n- Writes each note to its own JSON file\n- Creates a timestamped backup of the original file\n- Removes the original file\n\n### API Compatibility\n\nAll existing functions remain unchanged - the migration is transparent to consumers of the API. Functions like `saveNote()`, `getNotesForPath()`, and `getUsedTagsForPath()` work exactly as before.",
  "anchors": ["src/core-mcp/store/notesStore.ts", "tests/file-based-storage.test.ts"],
  "tags": ["architecture", "migration", "performance", "git"],
  "confidence": "high",
  "type": "decision",
  "metadata": {
    "toolVersion": "2.0.0",
    "createdBy": "repository_note_tool",
    "directoryPath": "/Users/griever/Developer/a24z-Memory",
    "relativePath": "."
  },
  "id": "note-1755706414182-u1gjn21fv",
  "timestamp": 1755706414182
}
