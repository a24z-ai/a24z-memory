{
  "note": "## MCP Tools Implementation Pattern\n\na24z-Memory implements tools using a base class pattern for consistency:\n\n### Tool Structure\n```typescript\nclass SomeTool extends BaseTool {\n  constructor() {\n    super(\n      'tool_name',\n      'Tool description',\n      zodSchema  // Input validation schema\n    );\n  }\n  \n  async execute(args: ValidatedArgs): Promise<ToolResult> {\n    // Implementation\n  }\n}\n```\n\n### Available Tools\n\n**Knowledge Management:**\n- `askA24zMemory` - Semantic search across repository knowledge\n- `create_repository_note` - Document new insights\n- `get_repository_tags` - Get available tags with AI suggestions\n\n**Repository Management:**\n- `get_repository_guidance` - Get configuration and guidelines\n- `check_stale_notes` - Find notes with outdated anchors\n- `delete_repository_note` - Remove notes by ID\n- `get_repository_note` - Retrieve specific note\n\n**Duplicate Management:**\n- `find_similar_notes` - Detect semantic duplicates\n- `merge_notes` - Consolidate similar notes\n- `review_duplicates` - Comprehensive duplicate analysis\n\n### Tool Registration\nTools are registered in McpServer's `setupDefaultTools()` method. Each tool becomes available through the MCP protocol to connected AI assistants.",
  "anchors": ["src/core-mcp/tools", "src/core-mcp/server/McpServer.ts"],
  "tags": ["mcp-tools"],
  "confidence": "high",
  "type": "pattern",
  "metadata": {
    "toolVersion": "2.0.0",
    "createdBy": "create_repository_note_tool"
  },
  "id": "note-1755926240399-pwhx9cz4k",
  "timestamp": 1755926240399
}
