{
  "name": "integration-guide",
  "description": "Comprehensive guide covering all Alexandria integration options from pre-commit hooks to CI/CD pipelines, including violation handling and best practices",
  "layout": {
    "style": "grid",
    "rows": 3,
    "columns": 3
  },
  "cells": [
    {
      "id": "quick-check",
      "gridPosition": { "row": 0, "column": 0 },
      "title": "Quick Integration Check",
      "summary": "Commands to assess current Alexandria integration level",
      "details": "Check integration status with:\n- `.husky/pre-commit` - Pre-commit hooks\n- `.github/workflows/alexandria.yml` - GitHub Actions\n- `.alexandriarc.json` - Alexandria config\n- `package.json` - lint-staged config\n- `.a24z/` - Memory storage",
      "anchors": [
        ".husky/pre-commit",
        ".github/workflows/alexandria.yml",
        ".alexandriarc.json",
        "package.json"
      ]
    },
    {
      "id": "setup-levels",
      "gridPosition": { "row": 0, "column": 1 },
      "title": "Integration Levels",
      "summary": "Progressive integration from basic to enterprise",
      "details": "Four levels of integration:\n1. Basic Setup (5 min) - `npx -y a24z-memory init`\n2. Pre-commit Hooks (10 min) - Husky + lint-staged\n3. GitHub Actions (15 min) - Auto-registration\n4. Full CI/CD (30 min) - Complete enforcement",
      "anchors": [
        "SETUP.md",
        "docs/ALEXANDRIA_INTEGRATION_GUIDE.md"
      ]
    },
    {
      "id": "violations",
      "gridPosition": { "row": 0, "column": 2 },
      "title": "Violation Handling",
      "summary": "What happens when documentation rules are broken",
      "details": "Violations are caught at multiple stages:\n- **Development**: Future VS Code integration\n- **Pre-commit**: Blocks commits via `.husky/pre-commit`\n- **Pull Requests**: GitHub Action validates views\n- **Main Branch**: Auto-updates registry",
      "anchors": [
        ".husky/pre-commit",
        ".github/workflows/alexandria.yml"
      ]
    },
    {
      "id": "precommit",
      "gridPosition": { "row": 1, "column": 0 },
      "title": "Pre-commit Configuration",
      "summary": "Current Husky and lint-staged setup",
      "details": "Pre-commit hooks run:\n- Type checking: `npm run typecheck`\n- Linting: ESLint + Prettier via lint-staged\n- Tests: `npm test`\n- MCP validation: `npm run test:mcp`\n\nConfigured in `package.json` lint-staged section",
      "anchors": [
        ".husky/pre-commit",
        "package.json"
      ]
    },
    {
      "id": "github-actions",
      "gridPosition": { "row": 1, "column": 1 },
      "title": "GitHub Actions",
      "summary": "Automated Alexandria registry updates",
      "details": "The `.github/workflows/alexandria.yml` workflow:\n- Triggers on `.a24z/views/**` changes\n- Registers with Alexandria API\n- Posts PR status comments\n- Tracks view counts\n- Updates https://a24z-ai.github.io/alexandria",
      "anchors": [
        ".github/workflows/alexandria.yml"
      ]
    },
    {
      "id": "configuration",
      "gridPosition": { "row": 1, "column": 2 },
      "title": "Configuration Files",
      "summary": "Alexandria and memory system configuration",
      "details": "Two main config files:\n- `.alexandriarc.json` - Alexandria linting rules\n- `.a24z/configuration.json` - Memory limits and tags\n\nBoth support enforcement levels, patterns, and limits",
      "anchors": [
        "docs/CONFIGURATION.md",
        ".alexandriarc.json"
      ]
    },
    {
      "id": "future-roadmap",
      "gridPosition": { "row": 2, "column": 0 },
      "title": "Future Roadmap",
      "summary": "Planned integration enhancements",
      "details": "Coming soon:\n- `alexandria lint --fix` auto-fixing\n- VS Code extension with inline warnings\n- Watch mode for development\n- Enterprise config presets\n- Metrics dashboard",
      "anchors": [
        "STANDARDIZATION_ROADMAP.md"
      ]
    },
    {
      "id": "best-practices",
      "gridPosition": { "row": 2, "column": 1 },
      "title": "Best Practices & Agents.md",
      "summary": "Recommended adoption strategy including AI agent documentation",
      "details": "Progressive enhancement approach:\n- Week 1: Capture insights with notes\n- Week 2: Create first CodebaseView\n- Week 3: Add pre-commit hooks\n- Month 1: Full CI/CD integration\n\n**Agents.md**: Document all AI agents, their capabilities, context requirements, and successful usage patterns. Create with `alexandria scaffold --template agents`",
      "anchors": [
        "docs/ALEXANDRIA_INTEGRATION_GUIDE.md",
        "SETUP.md",
        "docs/USAGE_GUIDE.md"
      ]
    },
    {
      "id": "troubleshooting",
      "gridPosition": { "row": 2, "column": 2 },
      "title": "Troubleshooting",
      "summary": "Common issues and solutions",
      "details": "Common fixes:\n- Skip hooks: `git commit --no-verify`\n- Auto-fix: `alexandria lint --fix`\n- Find missing: `alexandria lint --verbose`\n- Scaffold docs: `alexandria scaffold --path src/`",
      "anchors": [
        "docs/ALEXANDRIA_INTEGRATION_GUIDE.md"
      ]
    }
  ],
  "metadata": {
    "created": "2025-01-09",
    "documentPath": "docs/ALEXANDRIA_INTEGRATION_GUIDE.md",
    "tags": ["integration", "ci-cd", "pre-commit", "github-actions", "configuration"]
  }
}